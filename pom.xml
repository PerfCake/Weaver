<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
   <modelVersion>4.0.0</modelVersion>

   <groupId>org.perfcake.weaver</groupId>
   <artifactId>weaver</artifactId>
   <packaging>jar</packaging>
   <version>1.1</version>
   <name>Thread Weaver - An ill-behaved microservices emulator</name>
   <url>http://www.perfcake.org</url>
   <organization>
      <name>PerfCake Community</name>
      <url>https://www.perfcake.org</url>
   </organization>
   <inceptionYear>2016</inceptionYear>
   <scm>
      <url>https://github.com/PerfCake/Weaver</url>
      <connection>scm:git:git://github.com/PerfCake/Weaver.git</connection>
      <developerConnection>scm:git:git@github.com:PerfCake/weaver.git</developerConnection>
      <tag>v1.1</tag>
   </scm>
   <issueManagement>
      <system>GitHub</system>
      <url>https://github.com/PerfCake/Weaver/issues/</url>
   </issueManagement>
   <licenses>
      <license>
         <name>The Apache Software License, Version 2.0</name>
         <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
         <distribution>repo</distribution>
         <comments>A business-friendly OSS license</comments>
      </license>
   </licenses>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <java.level>1.8</java.level>

      <!-- Set pullInDeps to true if you want any modules specified in the 'includes' and 'deploys' fields
      in your mod.json to be automatically pulled in during packaging and added inside your module. Doing this means your
      module won't download and install those dependencies at run-time when they're first requested. -->
      <vertx.pullInDeps>true</vertx.pullInDeps>

      <!-- Set createFatJar to true if you want to create a fat executable jar which contains the Vert.x binaries
      along with the module so it can be run with java -jar <jarname> -->
      <vertx.createFatJar>true</vertx.createFatJar>

      <!--Vertx module name-->
      <module.name>${project.groupId}~${project.artifactId}~${project.version}</module.name>

      <!-- The directory where the module will be assembled - you can override this on the command line
      with -Dmods.directory=mydir -->
      <mods.directory>target/mods</mods.directory>

      <!--Dependency versions-->
      <vertx.version>3.3.2</vertx.version>
      <junit.version>4.12</junit.version>
      <perfcake.version>7.0</perfcake.version>
      <jcommander.version>1.48</jcommander.version>
      <!--Plugin versions-->
      <maven.assembly.plugin.version>2.6</maven.assembly.plugin.version>
      <maven.compiler.plugin.version>3.5.1</maven.compiler.plugin.version>
      <maven.exec.plugin.version>1.3.2</maven.exec.plugin.version>
      <maven.resources.plugin.version>3.0.1</maven.resources.plugin.version>
      <maven.jar.plugin.version>3.0.2</maven.jar.plugin.version>
      <maven.clean.plugin.version>3.0.0</maven.clean.plugin.version>
      <maven.vertx.plugin.version>2.0.9-final</maven.vertx.plugin.version>
      <maven.license.plugin.version>1.9</maven.license.plugin.version>
      <maven.surefire.plugin.version>2.19.1</maven.surefire.plugin.version>
      <maven.failsafe.plugin.version>2.19.1</maven.failsafe.plugin.version>
      <maven.surefire.report.plugin.version>2.19.1</maven.surefire.report.plugin.version>
      <maven.javadoc.plugin.version>2.10.4</maven.javadoc.plugin.version>
      <maven.source.plugin.version>3.0.1</maven.source.plugin.version>
      <maven.dependency.plugin.version>2.10</maven.dependency.plugin.version>

      <weaver.threads>0</weaver.threads>
      <weaver.shuffle>false</weaver.shuffle>
   </properties>

   <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>org.perfcake</groupId>
            <artifactId>perfcake-bom</artifactId>
            <version>${perfcake.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
      </dependencies>
   </dependencyManagement>

   <dependencies>
      <dependency>
         <groupId>org.perfcake</groupId>
         <artifactId>perfcake</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-core</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-1.2-api</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.logging.log4j</groupId>
         <artifactId>log4j-jul</artifactId>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-log4j12</artifactId>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
      </dependency>
      <dependency>
         <groupId>com.beust</groupId>
         <artifactId>jcommander</artifactId>
         <version>${jcommander.version}</version>
      </dependency>
      <dependency>
         <groupId>io.vertx</groupId>
         <artifactId>vertx-core</artifactId>
         <version>${vertx.version}</version>
      </dependency>
      <dependency>
         <groupId>io.vertx</groupId>
         <artifactId>vertx-web</artifactId>
         <version>${vertx.version}</version>
      </dependency>
      <dependency>
         <groupId>com.google.guava</groupId>
         <artifactId>guava</artifactId>
      </dependency>
      <dependency>
         <groupId>org.apache.commons</groupId>
         <artifactId>commons-lang3</artifactId>
      </dependency>

      <dependency>
         <groupId>org.testng</groupId>
         <artifactId>testng</artifactId>
         <scope>test</scope>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven.compiler.plugin.version}</version>
            <configuration>
               <source>${java.level}</source>
               <target>${java.level}</target>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-clean-plugin</artifactId>
            <version>${maven.clean.plugin.version}</version>
            <configuration>
               <filesets>
                  <fileset>
                     <directory>${basedir}</directory>
                     <includes>
                        <include>logs</include>
                        <include>*.log*</include>
                     </includes>
                     <followSymlinks>false</followSymlinks>
                  </fileset>
                  <fileset>
                     <directory>${basedir}/test-output</directory>
                  </fileset>
               </filesets>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>${maven.source.plugin.version}</version>
            <executions>
               <execution>
                  <id>attach-sources</id>
                  <goals>
                     <goal>jar-no-fork</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>${maven.javadoc.plugin.version}</version>
            <executions>
               <execution>
                  <id>attach-javadocs</id>
                  <goals>
                     <goal>jar</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <version>${maven.jar.plugin.version}</version>
            <configuration>
               <archive>
                  <manifest>
                     <addClasspath>true</addClasspath>
                     <mainClass>org.perfcake.examples.weaver.Weaver</mainClass>
                  </manifest>
               </archive>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>${maven.exec.plugin.version}</version>
            <configuration>
               <executable>java</executable>
               <arguments>
                  <argument>-cp</argument>
                  <classpath/>
                  <argument>org.perfcake.examples.weaver.Weaver</argument>
                  <argument>-c</argument>
                  <argument>${weaver.config}</argument>
                  <argument>-t</argument>
                  <argument>${weaver.threads}</argument>
                  <argument>-s</argument>
                  <argument>${weaver.shuffle}</argument>
               </arguments>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>license-maven-plugin</artifactId>
            <version>${maven.license.plugin.version}</version>
            <configuration>
               <verbose>false</verbose>
               <addSvnKeyWords>false</addSvnKeyWords>
               <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
               <processStartTag>-----------------------------------------------------------------------\</processStartTag>
               <processEndTag>-----------------------------------------------------------------------/</processEndTag>
               <sectionDelimiter>Â 
               </sectionDelimiter>
               <organizationName>the original author or authors.</organizationName>
               <licenseName>apache_v2</licenseName>
               <roots>
                  <root>src/main/java</root>
                  <root>src/test/java</root>
               </roots>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven.surefire.plugin.version}</version>
            <configuration>
               <!-- Fork every test because it will launch a separate AS instance -->
               <forkCount>1</forkCount>
               <reuseForks>false</reuseForks>
               <redirectTestOutputToFile>false</redirectTestOutputToFile>
               <systemPropertyVariables>
                  <log4j.skipJansi>true</log4j.skipJansi>
               </systemPropertyVariables>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-assembly-plugin</artifactId>
            <version>${maven.assembly.plugin.version}</version>
            <configuration>
               <descriptors>
                  <descriptor>${basedir}/src/main/assembly/bin.xml</descriptor>
                  <descriptor>${basedir}/src/main/assembly/src.xml</descriptor>
               </descriptors>
               <skipAssembly>false</skipAssembly>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>
